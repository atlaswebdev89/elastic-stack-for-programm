# Прокси для передачи syslog на любой порт. Logstash не запускается на 514 порту
# поэтому с помощью прокси делает изменения порта
stream {

    # Разделяем ЛОГ так как filebeat не может читать одновремено из одного лога
    # Лог полный для всех message
    error_log /var/log/nginx/logstash/logstash-connect.log info;
    # Лог только для ошибок. 
    error_log /var/log/nginx/logstash/logstash-error.log;

    # Группа серверов logstash. Минимум два для производительности и отказоустойчивости
    upstream logstash { 
       server elastic-logstash-node-1:5145;
       server elastic-logstash-node-2:5145;
    }

    server {
        listen 514;
        proxy_pass logstash;
        proxy_connect_timeout 1s; # detect failure quickly
        proxy_timeout 20s;
        # Для передачи реального ip запроса. Proxy protocol должен быть включен с двух сторон
        # Без него в Logstash прийдет ip Nginx, который используется в качестве прокси и балансировщика
        proxy_protocol on;
    }

    # UDP прокси 
    server {
        listen 514 udp;
        proxy_pass logstash;
        proxy_connect_timeout 1s; # detect failure quickly
        # По дефолту очень большое а каждое новое соеденение по udp создается заного и поэтому можно упереться в количество одновременных соединений
        proxy_timeout 2s;
        # Количество пакетов в ответе. Нам ответ не нужен поэтому указываем 0
        proxy_responses 0;
        # Для udp прокси Proxy protocol не работает, поэтому указывает proxy_bind для передачи реального ip запроса
        proxy_bind $remote_addr transparent;
    }
}